Some useful commands:
- git branch (current branch is starred)
- git switch <branch> (alternative to git checkout <branch>)
- git add, git commit -m "<message here>"
- git commit --amend -m "<message here>" (amends most recent commit message, ?if not pushed to remote?)
- git cherry-pick <SHA> (brings standalone commit from one branch into current branch. use -x to keep same commit hash This brings along commit message but not notes).
- git config --list --show-origin --show-scope
- git log <branch>..<branch>
- git log --graph --oneline --all
- git reset <file> (unstage a file if not yet committed)
- git stash, git stash apply, git stash pop (first, git add a file. then, git stash to "save" uncommited changes. switch branches and do what you gotta do. use git stash apply in desired branch to bring back (all?) stashed changes. git stash pop will bring back the latest stash and remove from stash list)
- git rebase -i <commit id> (interactive rebase. allows you to move, consolidate, reword, etc commits from remote or other branches. can bring in commits from elsewhere)
- git clone <repo url>, git clone -b <branch> <repo url>
- git diff <COMMIT SHA>~ <COMMIT SHA> (see the changes made between a set of commits)
